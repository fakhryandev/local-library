extends layout

block content
  h1= title

  form(action="", method="post")
    .form-group
      label(for="book") Book:
      select#book.form-control(
        name="book",
        type="select",
        placeholder="Select book",
        required
      )
        - book_list.sort(function(a,b) {let textA = a.title.toUpperCase(); let textB = b.title.toUpperCase(); return (textA < textB) ? - 1: (textA> textB) ? 1 : 0})
        each book in book_list
          option(
            value=book._id,
            selected=selected_book == book._id.toString() ? "selected" : false
          ) #{ book.title }

    .form-group
      label(for="imprint") Imprint:
      input#imprint.form-control(
        type="text",
        placeholder="Publisher and date information",
        name="imprint",
        required="true",
        value=undefined === bookinstance ? "" : bookinstance.imprint
      )

    .form-group
      label(for="due_back") Date when book available:
      input#due_back.form-control(
        type="date",
        name="due_back",
        value=unedfined === bookinstance ? "" : moment(bookinstance.due_back).format("yyyy-MM-DD")
      )

    .form-group
      label(for="status") Status:
      select#status.form-control(
        name="status",
        type="select",
        placeholder="Select status",
        required="true"
      )
        option(
          value="Maintenance",
          selected=undefined === bookinstance || bookinstance.status != "Maintenance" ? false : "selected"
        ) Maintenance
        option(
          value="Available",
          selected=undefined === bookinstance || bookinstance.status != "Available" ? false : "selected"
        ) Available
        option(
          value="Loaned",
          selected=undefined === bookinstance || bookinstance.status != "Loaned" ? false : "selected"
        ) Loaned
        option(
          value="Reserved",
          selected=undefined === bookinstance || bookinstance.status != "Reserved" ? false : "selected"
        ) Reserved
    button.btn.btn-primary(type="submit") Submit

    if errors
      ul
        each error in errors 
          li != error.msg
